# name: Exploring Variables and Secrets

# on:
#     push

# jobs:
#     docker:
#         runs-on: ubuntu-latest
#         steps:
#         - name: Docker Build
#           run: docker build -t docker.io/
        
#         - name: Docker Login
#           run: docker login --username= --password=

#         - name: Docker Publish
#           run: docker push docker.io/
    
#     deploy:
#         needs: docker
#         runs-on: ubuntu-latest
#         steps:
#         - name: Docker Run
#           run: docker run -d -p 8080:80 docker.io/

############### environment variables at STEP level ###############

# name: Exploring Variables and Secrets

# on:
#     push

# jobs:
#     docker:
#         runs-on: ubuntu-latest
#         steps:
#         - name: Docker Build
#           env:
#             CONTAINER_REGISTRY: docker.io
#             DOCKER_USERNAME: catalintopala
#             IMAGE_NAME: github-actions-nginx
#           run: echo docker build -t ${{env.CONTAINER_REGISTRY}}/${{env.DOCKER_USERNAME}}/${{env.IMAGE_NAME}}:latest
        
#         - name: Docker Login
#           env:
#             DOCKER_PASSWORD: s3cUrePaSsw0rd
#             DOCKER_USERNAME: catalintopala
#           run: echo docker login --username=${{env.DOCKER_USERNAME}} --password=${{env.DOCKER_PASSWORD}}

#         - name: Docker Publish
#           env:
#             CONTAINER_REGISTRY: docker.io
#             DOCKER_USERNAME: catalintopala
#             IMAGE_NAME: github-actions-nginx
#           run: echo docker push ${{env.CONTAINER_REGISTRY}}/${{env.DOCKER_USERNAME}}/${{env.IMAGE_NAME}}:latest
    
#     deploy:
#         needs: docker
#         runs-on: ubuntu-latest
#         steps:
#         - name: Docker Run
#           env:
#             CONTAINER_REGISTRY: docker.io
#             DOCKER_USERNAME: catalintopala
#             IMAGE_NAME: github-actions-nginx
#           run: echo docker run -d -p 8080:80 ${{env.CONTAINER_REGISTRY}}/${{env.DOCKER_USERNAME}}/${{env.IMAGE_NAME}}:latest

############### environment variables at JOB level ###############

# name: Exploring Variables and Secrets

# on:
#     push

# jobs:
#     docker:
#         env:
#             CONTAINER_REGISTRY: docker.io
#             DOCKER_USERNAME: catalintopala
#             IMAGE_NAME: github-actions-nginx
#         runs-on: ubuntu-latest
#         steps:
#         - name: Docker Build
#           run: echo docker build -t ${{env.CONTAINER_REGISTRY}}/${{env.DOCKER_USERNAME}}/${{env.IMAGE_NAME}}:latest
        
#         - name: Docker Login
#           env:
#             DOCKER_PASSWORD: s3cUrePaSsw0rd
#           run: echo docker login --username=${{env.DOCKER_USERNAME}} --password=${{env.DOCKER_PASSWORD}}

#         - name: Docker Publish
#           run: echo docker push ${{env.CONTAINER_REGISTRY}}/${{env.DOCKER_USERNAME}}/${{env.IMAGE_NAME}}:latest
    
#     deploy:
#         env:
#             CONTAINER_REGISTRY: docker.io
#             DOCKER_USERNAME: catalintopala
#             IMAGE_NAME: github-actions-nginx
#         needs: docker
#         runs-on: ubuntu-latest
#         steps:
#         - name: Docker Run
#           run: echo docker run -d -p 8080:80 ${{env.CONTAINER_REGISTRY}}/${{env.DOCKER_USERNAME}}/${{env.IMAGE_NAME}}:latest

############### environment variables at WORKFLOW level ###############

name: Exploring Variables and Secrets

on:
    push

env:
    CONTAINER_REGISTRY: docker.io
    IMAGE_NAME: github-actions-nginx
jobs:
    docker:
        runs-on: ubuntu-latest
        steps:
        - name: Docker Build
          run: echo docker build -t ${{env.CONTAINER_REGISTRY}}/${{vars.DOCKER_USERNAME}}/${{env.IMAGE_NAME}}:latest
        
        - name: Docker Login
          run: echo docker login --username=${{vars.DOCKER_USERNAME}} --password=${{env.DOCKER_PASSWORD}}

        - name: Docker Publish
          run: echo docker push ${{env.CONTAINER_REGISTRY}}/${{vars.DOCKER_USERNAME}}/${{env.IMAGE_NAME}}:latest
    
    deploy:
        needs: docker
        runs-on: ubuntu-latest
        steps:
        - name: Docker Run
          run: echo docker run -d -p 8080:80 ${{env.CONTAINER_REGISTRY}}/${{vars.DOCKER_USERNAME}}/${{env.IMAGE_NAME}}:latest